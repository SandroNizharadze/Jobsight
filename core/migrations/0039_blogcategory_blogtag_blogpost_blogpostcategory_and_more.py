# Generated by Django 5.1.7 on 2025-05-29 18:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0038_add_comparison_table'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='კატეგორიის სახელი')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='სლაგი')),
                ('description', models.TextField(blank=True, verbose_name='აღწერა')),
            ],
            options={
                'verbose_name': 'ბლოგის კატეგორია',
                'verbose_name_plural': 'ბლოგის კატეგორიები',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='წაშლის თარიღი')),
                ('title', models.CharField(max_length=200, verbose_name='სათაური')),
                ('slug', models.SlugField(max_length=250, unique=True, verbose_name='სლაგი')),
                ('content', models.TextField(verbose_name='კონტენტი')),
                ('excerpt', models.TextField(blank=True, max_length=500, verbose_name='მოკლე აღწერა')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='მეტა აღწერა')),
                ('meta_keywords', models.CharField(blank=True, max_length=255, verbose_name='მეტა საკვანძო სიტყვები')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog_images/', verbose_name='მთავარი სურათი')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10, verbose_name='სტატუსი')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='შექმნის თარიღი')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='განახლების თარიღი')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='გამოქვეყნების თარიღი')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='კომენტარების დაშვება')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='ნახვების რაოდენობა')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL, verbose_name='ავტორი')),
            ],
            options={
                'verbose_name': 'ბლოგის პოსტი',
                'verbose_name_plural': 'ბლოგის პოსტები',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogPostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='core.blogcategory')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='core.blogpost')),
            ],
            options={
                'verbose_name': 'პოსტის კატეგორია',
                'verbose_name_plural': 'პოსტების კატეგორიები',
            },
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['slug'], name='core_blogpo_slug_36a1f7_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['status', 'published_at'], name='core_blogpo_status_cfd0fd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blogpostcategory',
            unique_together={('post', 'category')},
        ),
    ]
