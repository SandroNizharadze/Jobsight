# Generated by Django 5.1.7 on 2025-06-28 14:56

from django.db import migrations


def remove_duplicate_cv_accesses(apps, schema_editor):
    """
    Remove duplicate CVAccess records, keeping only the most recent one for each employer-candidate pair
    """
    CVAccess = apps.get_model('core', 'CVAccess')
    
    # Get all unique employer-candidate pairs
    from django.db.models import Max
    unique_pairs = CVAccess.objects.values('employer_profile', 'candidate_profile').annotate(
        latest_id=Max('id')
    )
    
    # For each pair, delete all records except the latest one
    for pair in unique_pairs:
        CVAccess.objects.filter(
            employer_profile=pair['employer_profile'],
            candidate_profile=pair['candidate_profile']
        ).exclude(id=pair['latest_id']).delete()


def reverse_remove_duplicates(apps, schema_editor):
    """
    This is a no-op since we can't restore deleted records
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0061_staticpage'),
    ]

    operations = [
        # First, remove duplicate records
        migrations.RunPython(remove_duplicate_cv_accesses, reverse_remove_duplicates),
        
        # Then add the unique constraint
        migrations.AlterUniqueTogether(
            name='cvaccess',
            unique_together={('employer_profile', 'candidate_profile')},
        ),
    ]
